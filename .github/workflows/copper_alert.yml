name: Copper Wire Sale Monitor

on:
  schedule:
    - cron: "0 */3 * * *"  # ตรวจทุก 3 ชั่วโมง
  workflow_dispatch:

jobs:
  check_posts:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        pip install requests beautifulsoup4

    - name: Run monitor script
      env:
        BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
        CHAT_ID: ${{ secrets.CHAT_ID }}
      run: |
        python <<'EOF'
        import requests
        from bs4 import BeautifulSoup

        # ✅ ตัวกรองใหม่: เอาเฉพาะโพสต์ขายเท่านั้น
        keywords = [
            "ขายสายไฟทองแดง", "ขายสายไฟเก่า", "ขายสายไฟรวม",
            "ขาย VAF", "ขาย VCT", "ขาย NYY", "ขาย THW",
            "ขาย TVVB", "ขายสายลิฟต์", "ขายสายแบนขาว", "ขายสายแบนเทา"
        ]

        # ตัวอย่าง URL Marketplace (จำลอง)
        url = "https://www.facebook.com/marketplace/bangkok/search/?query=ขายสายไฟทองแดง"

        # ฟังก์ชันส่งแจ้งเตือน Telegram
        def notify(msg):
            requests.post(
                f"https://api.telegram.org/bot{BOT_TOKEN}/sendMessage",
                data={"chat_id": CHAT_ID, "text": msg, "parse_mode": "HTML"}
            )

        try:
            response = requests.get(url, headers={"User-Agent": "Mozilla/5.0"})
            if response.status_code == 200:
                soup = BeautifulSoup(response.text, "html.parser")
                # หมายเหตุ: Facebook ป้องกันการ scrap จริง — ส่วนนี้เป็นโครงสร้างตัวอย่าง
                notify("✅ Copper wire monitor checked — No errors.")
            else:
                notify(f"⚠️ Failed to fetch: {response.status_code}")
        except Exception as e:
            notify(f"❌ Error: {e}")
        EOF
